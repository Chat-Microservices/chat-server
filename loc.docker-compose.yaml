version: '3.7'

volumes:
  pg_vol_chat_server:

networks:
  chat-server-network:
    driver: bridge

services:
  pg-chat-server:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE_NAME}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - pg_vol_chat_server:/var/lib/postgresql/data
    networks:
      - chat-server-network

  chat-server:
    container_name: chat-server
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "./entrypoint.sh" ]
    volumes:
      - ${BASE_DIR}.env:/root/.env
    depends_on:
      - pg-chat-server
    networks:
      - chat-server-network
    ports:
      - "${GRPC_PORT_EXTERNAL}:${GRPC_PORT}"

  #TODO: для ограничения доступа к интерфейсу нужно будет использовать обратный прокси HAProxy, NGINX, Keycloak.
  #TODO: из коробки этого в джагере нет
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.48
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" #web
      - "14268:14268"
      - "9411:9411"
    networks:
      - chat-server-network
#    network_mode: host - для локальной без docker